Знакомство с PyQt 5
Итак, изучение основ языка Python закончено, и мы можем перейти к рассмотрению библиотеки PyQt, позволяющей разрабатывать приложения с графическим интерфейсом. Первые три главы второй части книги можно считать основными, поскольку в них описываются базовые возможности библиотеки и методы, которые наследуют все компоненты, так что
материал этих глав нужно знать обязательно. Остальные главы содержат дополнительный
справочный материал. В сопровождающий книгу электронный архив (см. приложение)
включен файл PyQt.doc, который содержит более 750 дополнительных листингов, поясняющих материал второй части книги, — что позволило уменьшить ее объем, поскольку
с этими листингами страниц книги было бы вдвое больше, чем всех страниц ее второй части.
17.1. Установка PyQt 5
Библиотека PyQt 5 не входит в комплект поставки Python, и прежде чем начать изучение ее
основ, необходимо установить эту библиотеку на компьютер.
В настоящее время установка библиотеки PyQt 5 выполняется исключительно просто. Для
этого достаточно запустить командную строку и отдать в ней команду:
pip3 install PyQt5
Утилита pip3, поставляемая в составе Python и предназначенная для установки дополнительных библиотек, самостоятельно загрузит последнюю версию PyQt 5 и установит ее по
пути <каталог, в котором установлен Python>\lib\site-packages\PyQt5.
ВНИМАНИЕ!
При установке PyQt таким способом устанавливаются только компоненты библиотеки, необходимые для запуска программ. Средства разработчика (такие как программа Designer)
и дополнительные компоненты, в частности клиентские части серверных СУБД, должны
быть установлены отдельно.
Чтобы проверить правильность установки, выведем версии PyQt и Qt:
>>> from PyQt5 import QtCore
>>> QtCore.PYQT_VERSION_STR
'5.9.2'
>>> QtCore.QT_VERSION_STR
'5.9.3'
17.2. Первая программа
При изучении языков и технологий принято начинать с программы, выводящей надпись
«Привет, мир!». Не станем нарушать традицию и напишем программу (листинг 17.1), создающую окно с приветствием и кнопкой для закрытия окна (рис. 17.1).
Рис. 17.1. Результат выполнения листинга 17.1
Листинг 17.1. Первая программа на PyQt
# -*- coding: utf-8 -*-
from PyQt5 import QtWidgets
import sys
app = QtWidgets.QApplication(sys.argv)
window = QtWidgets.QWidget()
window.setWindowTitle("Первая программа на PyQt")
window.resize(300, 70)
label = QtWidgets.QLabel("<center>Привет, мир!</center>")
btnQuit = QtWidgets.QPushButton("&Закрыть окно")
vbox = QtWidgets.QVBoxLayout()
vbox.addWidget(label)
vbox.addWidget(btnQuit)
window.setLayout(vbox)
btnQuit.clicked.connect(app.quit)
window.show()
sys.exit(app.exec_())
Для создания файла с программой можно по-прежнему пользоваться редактором IDLE.
Однако запуск оконного приложения из IDLE нажатием клавиши <F5> приводит к очень
неприятным артефактам (в частности, при завершении программы ее главное окно остается
на экране) и даже аварийному завершению работы редактора. Поэтому запускать оконные
приложения следует двойным щелчком на значке файла.
До сих пор мы создавали файлы с расширением py и все результаты выполнения программы
выводили в консоль. Оконное приложение также можно сохранить с расширением py, но
тогда при его запуске, помимо основного окна, также будет выведено окно консоли, что,
впрочем, на этапе разработки дает возможность вывести отладочную информацию (таким
способом мы будем пользоваться в дальнейших примерах). Чтобы избавиться от окна консоли, следует сохранять файл с расширением pyw.
Попробуйте создать два файла с различными расширениями и запустить двойным щелчком
каждый из них. 